{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./src/components/List/List.js","webpack:///./src/components/List/index.js"],"names":["TagsPage","props","posts","data","edges","tagsPosts","forEach","edge","tags","node","frontmatter","tag","push","tagList","Fragment","theme","color","neutral","gray","j","brand","primary","title","map","item","key","pageTitle","query","List","space","stack","m","xs","font","size","s","lineHeight","l","slug","fields","to"],"mappings":"yOAuFeA,UA7EE,SAAAC,GAAU,IAGLC,EAEhBD,EAHFE,KACED,MAASE,MAKPC,EAAY,GAClBH,EAAMI,SAAQ,SAAAC,GAAS,IAIFC,EAEfD,EAHFE,KACEC,YAAeF,KAIfA,GAAgB,MAARA,GACVA,EAAKF,SAAQ,SAAAK,GACPA,GAAc,MAAPA,IACJN,EAAUM,KACbN,EAAUM,GAAO,IAEnBN,EAAUM,GAAKC,KAAKL,UAM5B,IAAMM,EAAU,GAEhB,IAAK,IAAIF,KAAON,EACdQ,EAAQD,KAAK,CAACD,EAAKN,EAAUM,KAG/B,OACE,kBAAC,IAAMG,SAAP,KACE,kBAAC,IAAD,CAASC,MAAOA,KACd,iEAeaA,IAAMC,MAAMC,QAAQC,KAAKC,EAKvBJ,IAAMC,MAAMI,MAAMC,QAKrBN,IAAMC,MAAMI,MAAMC,aAxB5B,kBAAC,IAAD,CAAUC,MAAM,gBAAgBP,MAAOA,OAExCF,EAAQU,KAAI,SAAAC,GAAI,OACf,6BAASC,IAAKD,EAAK,GAAnB,qCAWWT,IAAMC,MAAMC,QAAQC,KAAKC,EAKvBJ,IAAMC,MAAMI,MAAMC,QAKrBN,IAAMC,MAAMI,MAAMC,aApB1B,6DAUSN,IAAMC,MAAMC,QAAQC,KAAKC,EAKvBJ,IAAMC,MAAMI,MAAMC,QAKrBN,IAAMC,MAAMI,MAAMC,aAnBxB,kBAAC,IAAD,MADF,IACaG,EAAK,IAElB,kBAAC,IAAD,CAAMpB,MAAOoB,EAAK,GAAIT,MAAOA,UATnC,0GAgBeA,IAAMC,MAAMC,QAAQC,KAAKC,EAhBxC,2DAqBiBJ,IAAMC,MAAMI,MAAMC,QArBnC,+DA0BcN,IAAMC,MAAMI,MAAMC,QA1BhC,eAgBeN,IAAMC,MAAMC,QAAQC,KAAKC,EAKvBJ,IAAMC,MAAMI,MAAMC,QAKrBN,IAAMC,MAAMI,MAAMC,YAKhC,kBAAC,IAAD,CAAKK,UAAU,WAYd,IAAMC,EAAK,a,6EC1CHC,EA5CF,SAAA3B,GAAU,IACbG,EAAiBH,EAAjBG,MAAOW,EAAUd,EAAVc,MAEf,OACE,kBAAC,IAAMD,SAAP,KACE,6DAoBcC,EAAMc,MAAMC,MAAMC,EACjBhB,EAAMc,MAAME,EAIZhB,EAAMc,MAAMG,GACVjB,EAAMkB,KAAKC,KAAKC,EACdpB,EAAMkB,KAAKG,WAAWC,OA1BtCjC,EAAMmB,KAAI,SAAAhB,GAAS,IAAD,EAMbA,EAJFE,KACiBa,EAHF,EAGbZ,YAAeY,MACLgB,EAJG,EAIbC,OAAUD,KAId,OACE,wBAAIb,IAAKa,EAAT,qCAUQvB,EAAMc,MAAMC,MAAMC,EACjBhB,EAAMc,MAAME,EAIZhB,EAAMc,MAAMG,GACVjB,EAAMkB,KAAKC,KAAKC,EACdpB,EAAMkB,KAAKG,WAAWC,OAhBjC,kBAAC,IAAD,CAAMG,GAAIF,GAAOhB,QAZ3B,0FAqBgBP,EAAMc,MAAMC,MAAMC,EArBlC,YAsBiBhB,EAAMc,MAAME,EAtB7B,kEA0BiBhB,EAAMc,MAAMG,GA1B7B,gBA2BmBjB,EAAMkB,KAAKC,KAAKC,EA3BnC,gBA4BqBpB,EAAMkB,KAAKG,WAAWC,EA5B3C,eAqBgBtB,EAAMc,MAAMC,MAAMC,EACjBhB,EAAMc,MAAME,EAIZhB,EAAMc,MAAMG,GACVjB,EAAMkB,KAAKC,KAAKC,EACdpB,EAAMkB,KAAKG,WAAWC,OCpC/C","file":"component---src-pages-tags-js-a01310207d9a011e08f8.js","sourcesContent":["import { FaTag } from \"react-icons/fa/\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport theme from \"../theme/theme.yaml\";\nimport Article from \"../components/Article/\";\nimport Headline from \"../components/Article/Headline\";\nimport List from \"../components/List\";\nimport Seo from \"../components/Seo\";\n\nconst TagsPage = props => {\n  const {\n    data: {\n      posts: { edges: posts }\n    }\n  } = props;\n\n  // Create tags list\n  const tagsPosts = {};\n  posts.forEach(edge => {\n    \n    const {\n      node: {\n        frontmatter: { tags }\n      }\n    } = edge;\n\n    if (tags && tags != null) {\n      tags.forEach(tag => {\n        if (tag && tag != null) {\n          if (!tagsPosts[tag]) {\n            tagsPosts[tag] = [];\n          }\n          tagsPosts[tag].push(edge);\n        }\n      })\n    }\n  });\n\n  const tagList = [];\n\n  for (var tag in tagsPosts) {\n    tagList.push([tag, tagsPosts[tag]]);\n  }\n\n  return (\n    <React.Fragment>\n      <Article theme={theme}>\n        <header>\n          <Headline title=\"Posts by tags\" theme={theme} />\n        </header>\n        {tagList.map(item => (\n          <section key={item[0]}>\n            <h2>\n              <FaTag /> {item[0]}\n            </h2>\n            <List edges={item[1]} theme={theme} />\n          </section>\n        ))}\n        {/* --- STYLES --- */}\n        <style jsx>{`\n          h2 {\n            margin: 0 0 0.5em;\n            color: ${theme.color.neutral.gray.j};\n            \n          }\n          @from-width desktop {\n            :global(a:hover) {\n              color: ${theme.color.brand.primary};\n            }\n          }\n          h2 :global(svg) {\n            height: 0.8em;\n            fill: ${theme.color.brand.primary};\n          }\n        `}</style>\n      </Article>\n\n      <Seo pageTitle=\"Tags\"/>\n    </React.Fragment>\n  );\n};\n\nTagsPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default TagsPage;\n\n//eslint-disable-next-line no-undef\nexport const query = graphql`\n  query PostsQuery {\n    posts: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//[0-9]+.*--/\" }\n      }\n      sort: { fields: [fields___prefix], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            prefix\n          }\n          frontmatter {\n            title\n            tags\n            author\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nconst List = props => {\n  const { edges, theme } = props;\n\n  return (\n    <React.Fragment>\n      <ul>\n        {edges.map(edge => {\n          const {\n            node: {\n              frontmatter: { title },\n              fields: { slug }\n            }\n          } = edge;\n\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        ul {\n          margin: ${theme.space.stack.m};\n          padding: ${theme.space.m};\n          list-style: circle;\n        }\n        li {\n          padding: ${theme.space.xs} 0;\n          font-size: ${theme.font.size.s};\n          line-height: ${theme.font.lineHeight.l};\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nList.propTypes = {\n  edges: PropTypes.array.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default List;\n","export { default } from \"./List\";\n"],"sourceRoot":""}